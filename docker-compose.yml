version: '2'

services:
  postgresql:
    image: postgres
    restart: always
    container_name: ${POSTGRESQL_HOST}
    env_file:
      docker-compose.env
    environment:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_ROOT_PASSWORD}
      POSTGRES_MAX_CONNECTIONS: 1
    volumes:
      - db-data:/var/lib/postgresql/data

  redis: 
    image: redis:latest
    container_name: redis-fohow
    restart: always
    ports:
      - "6379:6379"


  startbot:
    image: fohow-api:latest
    command: sh -c "poetry run python manage.py startbot"
    restart: always
    depends_on:    
      - fohow-api
    volumes:
      - ./fohow
    env_file:
      - docker-compose.env
    environment:
      - DOCKER_CONTAINER=True
    container_name: blakkk_startbot

  fohow-api:
    build: .
    image: fohow-api
    command:
      - sh
      - -c
      - |
        poetry run python manage.py collectstatic --noinput &&
        poetry run python manage.py migrate &&
        poetry run gunicorn Fohow.wsgi:application -b :8000
    env_file:
      - docker-compose.env
    environment:
      - DOCKER_CONTAINER=True
      - VIRTUAL_HOST=fohowomsk.space
      - LETSENCRYPT_HOST=fohowomsk.space
    ports:
      - "8000:8000" 
    depends_on:
      - postgresql
      - redis
    volumes:
      - .:/fohow
      - static_volume:/fohow/static
      - media_volume:/fohow/media
    container_name: fohow-api

  nginx:
    build: 
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx_fohow
    image: nginx_fohow
    volumes:
      - static_volume:/fohow/static
      - media_volume:/fohow/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - fohow-api
    ports:
      - "80:80"
      - "443:443"
  acme_companion:
    image: nginxproxy/acme-companion:2.2
    container_name: fohow_acme_companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh


volumes:
  db-data: null
  static_volume:
  media_volume:
  certs:
  vhost:
  html:
  acme: